{"ast":null,"code":"var _jsxFileName = \"/home/miguel/Documents/Git/finalProject/design/src/OurComponents/navBars/UpperNavBar.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\n\n// react-router components\nimport { useLocation, Link } from \"react-router-dom\";\n\n// prop-types is a library for typechecking of props.\nimport PropTypes from \"prop-types\";\n\n// @material-ui core components\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Menu from \"@mui/material/Menu\";\nimport Icon from \"@mui/material/Icon\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\nimport MDInput from \"components/MDInput\";\n\n// Material Dashboard 2 React example components\nimport Breadcrumbs from \"examples/Breadcrumbs\";\nimport NotificationItem from \"examples/Items/NotificationItem\";\n\n// Custom styles for UpperNavBar\nimport { navbar, navbarContainer, navbarRow } from \"examples/Navbars/DashboardNavbar/styles\";\n\n// Material Dashboard 2 React context\nimport { useMaterialUIController, setTransparentNavbar, setMiniSidenav, setOpenConfigurator } from \"context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UpperNavBar({\n  absolute,\n  light,\n  isMini\n}) {\n  _s();\n  const [navbarType, setNavbarType] = useState();\n  const [controller, dispatch] = useMaterialUIController();\n  const {\n    miniSidenav,\n    transparentNavbar,\n    fixedNavbar,\n    openConfigurator,\n    darkMode\n  } = controller;\n  const [openMenu, setOpenMenu] = useState(false);\n  const route = useLocation().pathname.split(\"/\").slice(1);\n  useEffect(() => {\n    // Setting the navbar type\n    if (fixedNavbar) {\n      setNavbarType(\"sticky\");\n    } else {\n      setNavbarType(\"static\");\n    }\n\n    // A function that sets the transparent state of the navbar.\n    function handleTransparentNavbar() {\n      setTransparentNavbar(dispatch, fixedNavbar && window.scrollY === 0 || !fixedNavbar);\n    }\n\n    /** \n     The event listener that's calling the handleTransparentNavbar function when \n     scrolling the window.\n    */\n    window.addEventListener(\"scroll\", handleTransparentNavbar);\n\n    // Call the handleTransparentNavbar function to set the state with the initial value.\n    handleTransparentNavbar();\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"scroll\", handleTransparentNavbar);\n  }, [dispatch, fixedNavbar]);\n  const handleCloseMenu = () => setOpenMenu(false);\n\n  // Styles for the navbar icons\n  const iconsStyle = ({\n    palette: {\n      dark,\n      white,\n      text\n    },\n    functions: {\n      rgba\n    }\n  }) => ({\n    color: () => {\n      let colorValue = light || darkMode ? white.main : dark.main;\n      if (transparentNavbar && !light) {\n        colorValue = darkMode ? rgba(text.main, 0.6) : text.main;\n      }\n      return colorValue;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    position: absolute ? \"absolute\" : navbarType,\n    color: \"inherit\",\n    sx: theme => navbar(theme, {\n      transparentNavbar,\n      absolute,\n      light,\n      darkMode\n    }),\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {\n      sx: theme => navbarContainer(theme),\n      children: /*#__PURE__*/_jsxDEV(MDBox, {\n        color: \"inherit\",\n        mb: {\n          xs: 1,\n          md: 0\n        },\n        sx: theme => navbarRow(theme, {\n          isMini\n        }),\n        children: /*#__PURE__*/_jsxDEV(Breadcrumbs, {\n          icon: \"home\",\n          title: route[route.length - 1],\n          route: route,\n          light: light\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\n// Setting default values for the props of UpperNavBar\n_s(UpperNavBar, \"C3W4+gvwLxd9uKcRodv/aA6I1Qw=\", false, function () {\n  return [useMaterialUIController, useLocation];\n});\n_c = UpperNavBar;\nUpperNavBar.defaultProps = {\n  absolute: false,\n  light: false,\n  isMini: false\n};\n\n// Typechecking props for the UpperNavBar\nUpperNavBar.propTypes = {\n  absolute: PropTypes.bool,\n  light: PropTypes.bool,\n  isMini: PropTypes.bool\n};\nexport default UpperNavBar;\nvar _c;\n$RefreshReg$(_c, \"UpperNavBar\");","map":{"version":3,"names":["useState","useEffect","useLocation","Link","PropTypes","AppBar","Toolbar","IconButton","Menu","Icon","MDBox","MDInput","Breadcrumbs","NotificationItem","navbar","navbarContainer","navbarRow","useMaterialUIController","setTransparentNavbar","setMiniSidenav","setOpenConfigurator","jsxDEV","_jsxDEV","UpperNavBar","absolute","light","isMini","_s","navbarType","setNavbarType","controller","dispatch","miniSidenav","transparentNavbar","fixedNavbar","openConfigurator","darkMode","openMenu","setOpenMenu","route","pathname","split","slice","handleTransparentNavbar","window","scrollY","addEventListener","removeEventListener","handleCloseMenu","iconsStyle","palette","dark","white","text","functions","rgba","color","colorValue","main","position","sx","theme","children","mb","xs","md","icon","title","length","fileName","_jsxFileName","lineNumber","columnNumber","_c","defaultProps","propTypes","bool","$RefreshReg$"],"sources":["/home/miguel/Documents/Git/finalProject/design/src/OurComponents/navBars/UpperNavBar.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\n// react-router components\nimport { useLocation, Link } from \"react-router-dom\";\n\n// prop-types is a library for typechecking of props.\nimport PropTypes from \"prop-types\";\n\n// @material-ui core components\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Menu from \"@mui/material/Menu\";\nimport Icon from \"@mui/material/Icon\";\n\n// Material Dashboard 2 React components\nimport MDBox from \"components/MDBox\";\nimport MDInput from \"components/MDInput\";\n\n// Material Dashboard 2 React example components\nimport Breadcrumbs from \"examples/Breadcrumbs\";\nimport NotificationItem from \"examples/Items/NotificationItem\";\n\n// Custom styles for UpperNavBar\nimport {\n  navbar,\n  navbarContainer,\n  navbarRow\n} from \"examples/Navbars/DashboardNavbar/styles\";\n\n// Material Dashboard 2 React context\nimport {\n  useMaterialUIController,\n  setTransparentNavbar,\n  setMiniSidenav,\n  setOpenConfigurator,\n} from \"context\";\n\nfunction UpperNavBar({ absolute, light, isMini }) {\n  const [navbarType, setNavbarType] = useState();\n  const [controller, dispatch] = useMaterialUIController();\n  const { miniSidenav, transparentNavbar, fixedNavbar, openConfigurator, darkMode } = controller;\n  const [openMenu, setOpenMenu] = useState(false);\n  const route = useLocation().pathname.split(\"/\").slice(1);\n\n  useEffect(() => {\n    // Setting the navbar type\n    if (fixedNavbar) {\n      setNavbarType(\"sticky\");\n    } else {\n      setNavbarType(\"static\");\n    }\n\n    // A function that sets the transparent state of the navbar.\n    function handleTransparentNavbar() {\n      setTransparentNavbar(dispatch, (fixedNavbar && window.scrollY === 0) || !fixedNavbar);\n    }\n\n    /** \n     The event listener that's calling the handleTransparentNavbar function when \n     scrolling the window.\n    */\n    window.addEventListener(\"scroll\", handleTransparentNavbar);\n\n    // Call the handleTransparentNavbar function to set the state with the initial value.\n    handleTransparentNavbar();\n\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"scroll\", handleTransparentNavbar);\n  }, [dispatch, fixedNavbar]);\n\n\n  const handleCloseMenu = () => setOpenMenu(false);\n\n  // Styles for the navbar icons\n  const iconsStyle = ({ palette: { dark, white, text }, functions: { rgba } }) => ({\n    color: () => {\n      let colorValue = light || darkMode ? white.main : dark.main;\n\n      if (transparentNavbar && !light) {\n        colorValue = darkMode ? rgba(text.main, 0.6) : text.main;\n      }\n\n      return colorValue;\n    },\n  });\n\n  return (\n    <AppBar\n      position={absolute ? \"absolute\" : navbarType}\n      color=\"inherit\"\n      sx={(theme) => navbar(theme, { transparentNavbar, absolute, light, darkMode })}\n    >\n      <Toolbar sx={(theme) => navbarContainer(theme)}>\n        <MDBox color=\"inherit\" mb={{ xs: 1, md: 0 }} sx={(theme) => navbarRow(theme, { isMini })}>\n          <Breadcrumbs icon=\"home\" title={route[route.length - 1]} route={route} light={light} />\n        </MDBox>\n        \n      </Toolbar>\n    </AppBar>\n  );\n}\n\n// Setting default values for the props of UpperNavBar\nUpperNavBar.defaultProps = {\n  absolute: false,\n  light: false,\n  isMini: false,\n};\n\n// Typechecking props for the UpperNavBar\nUpperNavBar.propTypes = {\n  absolute: PropTypes.bool,\n  light: PropTypes.bool,\n  isMini: PropTypes.bool,\n};\n\nexport default UpperNavBar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}